{"mappings":"AAAA,0EAA0E;AAC1E,yDAAyD;AACzD,+DAA+D;AAC/D,kDAAkD;AAClD,uEAAuE;AAEvE,MAAM;IACJ,YAAY,IAAI,CAAE;QAChB,IAAI,CAAC,OAAO;IACd;IACA,UAAU,CAAE;IACZ,eAAe,CAAE;AACnB;AAEA,MAAM,eAAe;IACnB,YAAY,IAAI,EAAE,MAAM,CAAE;QACxB,KAAK,CAAC;QACN,IAAI,CAAC,SAAS;IAChB;IACA,UAAU;QACR,OAAO,KAAK,KAAK,IAAI,CAAC,UAAU,GAAG,4BAA4B;IACjE;IACA,eAAe;QACb,OAAO,IAAI,KAAK,KAAK,IAAI,CAAC,QAAQ,qBAAqB;IACzD;AACF;AAEA,MAAM,kBAAkB;IACtB,YAAY,IAAI,EAAE,KAAK,EAAE,MAAM,CAAE;QAC/B,KAAK,CAAC;QACN,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,SAAS;IAChB;IACA,UAAU;QACR,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC;IAC3B;IACA,eAAe;QACb,OAAO,IAAK,CAAA,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAK;IACrC;AACF;AAEA,MAAM,iBAAiB;IACrB,YAAY,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAE;QACrC,KAAK,CAAC;QACN,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,QAAQ;IACf;IACA,UAAU;QACR,MAAM,IAAI,AAAC,CAAA,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAI,IAAK;QACnD,OAAO,KAAK,KAAK,IAAK,CAAA,IAAI,IAAI,CAAC,KAAI,IAAM,CAAA,IAAI,IAAI,CAAC,KAAI,IAAM,CAAA,IAAI,IAAI,CAAC,KAAI;IAC3E;IACA,eAAe;QACb,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC;IACxC;AACF;AAGA,MAAM,SAAS,IAAI,OAAO,QAAQ;AAClC,QAAQ,IAAI,OAAO,YAAY,oBAAoB;AACnD,QAAQ,IAAI,OAAO,iBAAiB,oBAAoB;AAExD,MAAM,YAAY,IAAI,UAAU,iBAAiB,IAAI;AACrD,QAAQ,IAAI,UAAU,YAAY,MAAM;AACxC,QAAQ,IAAI,UAAU,iBAAiB,KAAK;AAE5C,MAAM,WAAW,IAAI,SAAS,eAAe,GAAG,GAAG;AACnD,QAAQ,IAAI,SAAS,YAAY,IAAI;AACrC,QAAQ,IAAI,SAAS,iBAAiB,KAAK","sources":["src/11-20/classes_13/classes_13.js"],"sourcesContent":["// Задача на классы и наследование: создайте базовый класс Shape (фигура),\r\n//  который имеет методы для расчета площади и периметра.\r\n//   Затем создайте подклассы, представляющие различные фигуры,\r\n//    такие как прямоугольник, круг и треугольник.\r\n//     Реализуйте методы расчета площади и периметра для каждой фигуры.\r\n\r\nclass Shape {\r\n  constructor(name) {\r\n    this.name = name;\r\n  }\r\n  getArea() { }\r\n  getPerimeter() { }\r\n}\r\n\r\nclass Circle extends Shape { // наследование\r\n  constructor(name, radius) { // переопределение конструктора\r\n    super(name);\r\n    this.radius = radius;\r\n  }\r\n  getArea() { // переопределение метода\r\n    return Math.PI * this.radius ** 2; // ** - возведение в степень\r\n  }\r\n  getPerimeter() {\r\n    return 2 * Math.PI * this.radius; // Math.PI - число пи\r\n  }\r\n}\r\n\r\nclass Rectangle extends Shape {\r\n  constructor(name, width, height) {\r\n    super(name);\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n  getArea() {\r\n    return this.width * this.height;\r\n  }\r\n  getPerimeter() {\r\n    return 2 * (this.width + this.height);\r\n  }\r\n}\r\n\r\nclass Triangle extends Shape {\r\n  constructor(name, sideA, sideB, sideC) {\r\n    super(name);\r\n    this.sideA = sideA;\r\n    this.sideB = sideB;\r\n    this.sideC = sideC;\r\n  }\r\n  getArea() {\r\n    const p = (this.sideA + this.sideB + this.sideC) / 2;\r\n    return Math.sqrt(p * (p - this.sideA) * (p - this.sideB) * (p - this.sideC));\r\n  }\r\n  getPerimeter() {\r\n    return this.sideA + this.sideB + this.sideC;\r\n  }\r\n}\r\n\r\n\r\nconst circle = new Circle('Круг', 10);\r\nconsole.log(circle.getArea()); // 314.1592653589793\r\nconsole.log(circle.getPerimeter()); // 62.83185307179586\r\n\r\nconst rectangle = new Rectangle('Прямоугольник', 10, 20);\r\nconsole.log(rectangle.getArea()); // 200\r\nconsole.log(rectangle.getPerimeter()); // 60\r\n\r\nconst triangle = new Triangle('Треугольник', 3, 4, 5);\r\nconsole.log(triangle.getArea()); // 6\r\nconsole.log(triangle.getPerimeter()); // 12\r\n"],"names":[],"version":3,"file":"classes.17e6c1cf.js.map","sourceRoot":"/__parcel_source_root/"}