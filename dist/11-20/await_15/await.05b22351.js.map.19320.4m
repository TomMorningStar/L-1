{"mappings":"AAAA,4EAA4E;AAC5E,6EAA6E;AAC7E,uCAAuC;AAEvC,eAAe;IACb,QAAQ,IAAI;IAEZ,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW;YACxC,QAAQ,QAAQ,IAAI;QACtB,GAAG;IAEH,QAAQ,IAAI;IAEZ,OAAO;AACT;AAEA,SAAS;IACP,OAAO,KAAK,CAAC,SAAW,QAAQ,IAAI;AACtC;AAEA,KAAK,6CAA6C","sources":["src/11-20/await_15/await_15.js"],"sourcesContent":["// Задача на асинхронность: напишите асинхронную функцию, которая использует\r\n//  ключевое слово await для ожидания выполнения других асинхронных операций,\r\n//   и возвращает результат выполнения.\r\n\r\nasync function wait() {\r\n  console.log(1);\r\n\r\n  await new Promise((resolve) => setTimeout(() => {\r\n    resolve(console.log('Hello'));\r\n  }, 1000));\r\n\r\n  console.log(2);\r\n\r\n  return 3;\r\n}\r\n\r\nfunction f() {\r\n  wait().then((result) => console.log(result));\r\n}\r\n\r\nf(); // 1 Hello 2 3 // Запуск модуля асинхронности\r\n"],"names":[],"version":3,"file":"await.05b22351.js.map","sourceRoot":"/__parcel_source_root/"}