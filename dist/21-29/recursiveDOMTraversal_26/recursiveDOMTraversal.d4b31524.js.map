{"mappings":"AAAA,2DAA2D;AAC3D,2EAA2E;AAC3E,oGAAoG;AAEpG,SAAS,sBAAsB,IAAI,EAAE,MAAM;IACzC,qCAAqC;IACrC,OAAO;IAEP,8CAA8C;IAC9C,MAAM,WAAW,KAAK;IACtB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,QAAQ,IACnC,sBAAsB,QAAQ,CAAC,EAAE,EAAE;AAEvC;AAEA,MAAM,cAAc,SAAS,eAAe;AAC5C,MAAM,aAAa,CAAC;IAClB,IAAI,KAAK,aAAa,KAAK,cACzB,QAAQ,IAAI,QAAQ,KAAK;AAE7B;AAEA,sBAAsB,aAAa","sources":["src/21-29/recursiveDOMTraversal_26/recursiveDOMTraversal_26.js"],"sourcesContent":["// Задача: Рекурсивный обход дерева DOM:: Напишите функцию,\r\n//  которая рекурсивно обходит дерево DOM, начиная с указанного элемента, и\r\n//  выполняет определенное действие с каждым узлом (например, выводить информацию о теге в консоль).\r\n\r\nfunction recursiveDOMTraversal(node, action) {\r\n  // выполняем действие с текущим узлом\r\n  action(node);\r\n\r\n  // рекурсивно обходим всех детей текущего узла\r\n  const children = node.childNodes;\r\n  for (let i = 0; i < children.length; i++) {\r\n    recursiveDOMTraversal(children[i], action);\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nconst logTagInfo = (node) => {\r\n  if (node.nodeType === Node.ELEMENT_NODE) {\r\n    console.log('Тег:', node.tagName);\r\n  }\r\n};\r\n\r\nrecursiveDOMTraversal(rootElement, logTagInfo);\r\n"],"names":[],"version":3,"file":"recursiveDOMTraversal.d4b31524.js.map","sourceRoot":"/__parcel_source_root/"}