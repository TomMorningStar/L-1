{"mappings":"AAAA,4DAA4D;AAC5D,4DAA4D;AAC5D,0DAA0D;AAG1D,SAAS,mBAAmB,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ;IACtE,MAAM,aAAa,QAAQ;IAC3B,MAAM,cAAc,QAAQ;IAC5B,MAAM,YAAY,YAAY;IAE9B,yFAAyF;IACzF,iGAAiG;IACjG,2FAA2F;IAE3F,SAAS,KAAK,WAAW;QACvB,MAAM,cAAc,cAAc;QAClC,IAAI,eAAe,UAAU;YAC3B,QAAQ,MAAM,QAAQ,CAAC,EAAE,YAAY,EAAE,CAAC;YACxC,QAAQ,MAAM,SAAS,CAAC,EAAE,aAAa,EAAE,CAAC;YAC1C;QACF,OACE,QAAQ,IAAI,aAAa;QAG3B,QAAQ,IAAI,eAAe;QAE3B,MAAM,WAAW,KAAK,IAAI,GAAG,cAAc;QAC3C,MAAM,WAAW,aAAa,AAAC,CAAA,cAAc,UAAS,IAAK;QAC3D,MAAM,YAAY,cAAc,AAAC,CAAA,eAAe,WAAU,IAAK;QAC/D,oDAAoD;QAEpD,QAAQ,MAAM,QAAQ,CAAC,EAAE,SAAS,EAAE,CAAC;QACrC,QAAQ,MAAM,SAAS,CAAC,EAAE,UAAU,EAAE,CAAC;QAEvC,sBAAsB,OAAO,uDAAuD;IACtF;IAEA,sBAAsB;AACxB;AAGA,MAAM,mBAAmB,SAAS,eAAe;AACjD,mBAAmB,kBAAkB,KAAK,KAAK,OAAO,kCAAkC","sources":["src/21-29/animateElement_27/animateElement_27.js"],"sourcesContent":["// Задача: Добавить анимацию для элемента: Напишите функцию,\r\n//  которая добавляет анимацию для элемента на веб-странице,\r\n//  например, плавное изменение его положения или размера.\r\n\r\n\r\nfunction animateElementSize(element, targetWidth, targetHeight, duration) {\r\n  const startWidth = element.offsetWidth;\r\n  const startHeight = element.offsetHeight;\r\n  const startTime = performance.now();\r\n\r\n  // Метод performance.now()возвращает метку времени с высоким разрешением в миллисекундах.\r\n  // Он представляет собой время, прошедшее с тех пор Performance.timeOrigin(время начала навигации\r\n  // в контекстах окна или время запуска рабочего процесса в Workerконтекстах ServiceWorker).\r\n\r\n  function step(currentTime) {\r\n    const elapsedTime = currentTime - startTime;\r\n    if (elapsedTime >= duration) {\r\n      element.style.width = `${targetWidth}px`;\r\n      element.style.height = `${targetHeight}px`;\r\n      return;\r\n    } else {\r\n      console.log(elapsedTime, duration);\r\n    }\r\n\r\n    console.log(elapsedTime >= duration);\r\n\r\n    const progress = Math.min(1, elapsedTime / duration);\r\n    const newWidth = startWidth + (targetWidth - startWidth) * progress;\r\n    const newHeight = startHeight + (targetHeight - startHeight) * progress;\r\n    // уменьшаем длину за счет этого происходит анимация\r\n\r\n    element.style.width = `${newWidth}px`;\r\n    element.style.height = `${newHeight}px`;\r\n\r\n    requestAnimationFrame(step); // бесконечный оптимизированный цикл встроенный в js ;)\r\n  }\r\n\r\n  requestAnimationFrame(step);\r\n}\r\n\r\n\r\nconst elementToAnimate = document.getElementById('element-to-animate');\r\nanimateElementSize(elementToAnimate, 300, 200, 1000); // элемент, ширина, высота, время \r\n"],"names":[],"version":3,"file":"animateElement.13493696.js.map","sourceRoot":"/__parcel_source_root/"}