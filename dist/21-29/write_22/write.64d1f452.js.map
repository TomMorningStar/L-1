{"mappings":"AAAA,6GAA6G;AAE7G,SAAS;IACP,IAAI,QAAQ;IAEZ,SAAS;QACP,IAAI;YACF,SAAS,MAAM,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,CAAC;YAC/C;YACA;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,IAAI,CAAC,kDAAkD,EAAE,MAAM,CAAC;QAC1E;IACF;IAEA;AACF;AAEA,uBAAuB,6DAA6D;CAEpF,oFAAoF;CAEpF,4EAA4E;CAE5E,0FAA0F;CAE1F,gHAAgH;CAEhH,uGAAuG;CAEvG,6FAA6F","sources":["src/21-29/write_22/write_22.js"],"sourcesContent":["// Посчитайте сколько раз можно вызвать функцию document.write() внутри document.write(). Объясните результат\r\n\r\nfunction countDocumentWrites() {\r\n  let count = 0;\r\n\r\n  function tryDocumentWrite() {\r\n    try {\r\n      document.write(`Попытка номер ${count + 1}<br>`);\r\n      count++;\r\n      tryDocumentWrite();\r\n    } catch (error) {\r\n      console.log(`Максимальное количество вызовов document.write(): ${count}`);\r\n    }\r\n  }\r\n\r\n  tryDocumentWrite();\r\n}\r\n\r\ncountDocumentWrites(); // Запуск модуля подсчета количества вызовов document.write()\r\n\r\n// Внутри функции у нас есть переменная count, которая инициализируется значением 0.\r\n\r\n//  Она будет использоваться для подсчета успешных вызовов document.write().\r\n\r\n// Далее у нас есть функция tryDocumentWrite(), которая пытается вызвать document.write().\r\n\r\n// Если вызов прошел успешно, то мы увеличиваем значение count на 1 и вызываем функцию tryDocumentWrite() снова.\r\n\r\n// Если вызов document.write() прошел неуспешно, то мы ловим ошибку и выводим в консоль значение count.\r\n\r\n// Таким образом, мы сможем узнать максимальное количество успешных вызовов document.write().\r\n"],"names":[],"version":3,"file":"write.64d1f452.js.map","sourceRoot":"/__parcel_source_root/"}