{"mappings":"AAAA,0GAA0G;AAE1G,cAAc;AACd,kDAAkD;AAClD,kFAAkF;AAClF,yEAAyE;AAEzE,MAAM,YAAY,SAAS,eAAe;AAC1C,MAAM,aAAa,SAAS,eAAe;AAC3C,IAAI,cAAc;AAClB,MAAM,eAAe;AACrB,IAAI,OAAO,EAAE;AAEb,IAAI,CAAC,KAAK,QACR,UAAU,YAAY;AAGxB,eAAe;IACb,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAE7B,IAAI,CAAC,SAAS,IACZ,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,WAAW,CAAC;QAGlE,MAAM,SAAS,MAAM,SAAS;QAC9B,OAAO;QACP;QACA;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,MAAM;QACd,MAAM;IACR;AACF;AAEA,SAAS;IACP,UAAU,YAAY;IACtB,MAAM,aAAa,AAAC,CAAA,cAAc,CAAA,IAAK;IACvC,MAAM,WAAW,aAAa;IAC9B,MAAM,cAAc,KAAK,MAAM,YAAY,WAAW,+DAA+D;IAErH,YAAY,QAAQ,CAAA;QAClB,MAAM,MAAM,SAAS,cAAc;QACnC,IAAI,YAAY,CAAC;cACP,EAAE,KAAK,MAAM;cACb,EAAE,KAAK,MAAM;cACb,EAAE,KAAK,IAAI;cACX,EAAE,KAAK,QAAQ;cACf,EAAE,KAAK,KAAK;cACZ,EAAE,KAAK,MAAM;cACb,EAAE,KAAK,IAAI;MACnB,CAAC;QACH,UAAU,YAAY;IACxB;AACF;AAEA,SAAS,UAAU,MAAM;IACvB,KAAK,KAAK,CAAC,GAAG;QACZ,IAAI,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO;QAClC,IAAI,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO;QAClC,OAAO;IACT;IAEA;AACF;AAEA,SAAS;IACP,MAAM,aAAa,KAAK,KAAK,KAAK,SAAS,eAAe,iBAAiB;IAC3E,WAAW,YAAY;IAEvB,IAAK,IAAI,IAAI,GAAG,KAAK,YAAY,IAAK;QACpC,MAAM,aAAa,SAAS,cAAc;QAC1C,WAAW,YAAY;QACvB,WAAW,iBAAiB,SAAS;YACnC,cAAc;YACd;YACA;QACF;QACA,WAAW,YAAY,aAAa,2BAA2B;IACjE;AACF;AAEA","sources":["src/21-29/table_24/table_24.js"],"sourcesContent":["// Разработайте страницу, отображающую таблицу с данными. Данные необходимо подгружать из этого источника.\r\n\r\n// Требования:\r\n// данные должны загружаться при загрузке страницы\r\n// необходимо реализовать сортировку по убыванию и по возрастания для всех колонок\r\n// необходимо реализовать клиентскую пагинацию (50 элементов на странице)\r\n\r\nconst tableBody = document.getElementById('table-body');\r\nconst pagination = document.getElementById('pagination');\r\nlet currentPage = 1;\r\nconst itemsPerPage = 50;\r\nlet data = [];\r\n\r\nif (!data.length) {\r\n  tableBody.innerHTML = 'Загрузка данных...'\r\n}\r\n\r\nasync function fetchData() {\r\n  try {\r\n    const response = await fetch('http://www.filltext.com/?rows=1000&fname={firstName}&lname={lastName}&tel={phone|format}&address={streetAddress}&city={city}&state={usState|abbr}&zip={zip}&pretty=true');\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Ошибка загрузки данных: ${response.statusText}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    data = result;\r\n    displayData();\r\n    updatePagination();\r\n  } catch (error) {\r\n    console.error(error);\r\n    alert('Произошла ошибка при загрузке данных.');\r\n  }\r\n}\r\n\r\nfunction displayData() {\r\n  tableBody.innerHTML = '';\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const currentData = data.slice(startIndex, endIndex); // пагинация по индексам методом slice 0 50, 50 100, 100 150...\r\n\r\n  currentData.forEach(item => {\r\n    const row = document.createElement('tr');\r\n    row.innerHTML = `\r\n          <td>${item.fname}</td>\r\n          <td>${item.lname}</td>\r\n          <td>${item.tel}</td>\r\n          <td>${item.address}</td>\r\n          <td>${item.city}</td>\r\n          <td>${item.state}</td>\r\n          <td>${item.zip}</td>\r\n      `;\r\n    tableBody.appendChild(row);\r\n  });\r\n}\r\n\r\nfunction sortTable(column) {\r\n  data.sort((a, b) => {\r\n    if (a[column] < b[column]) return -1;\r\n    if (a[column] > b[column]) return 1;\r\n    return 0;\r\n  });\r\n\r\n  displayData();\r\n}\r\n\r\nfunction updatePagination() {\r\n  const totalPages = Math.ceil(data.length / itemsPerPage); // всего страниц \r\n  pagination.innerHTML = '';\r\n\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    const pageButton = document.createElement('button');\r\n    pageButton.innerText = i;\r\n    pageButton.addEventListener('click', () => {\r\n      currentPage = i;\r\n      displayData();\r\n      updatePagination();\r\n    });\r\n    pagination.appendChild(pageButton); // Создаем кнопки пагинации\r\n  }\r\n}\r\n\r\nfetchData();\r\n"],"names":[],"version":3,"file":"table.6a33f36f.js.map","sourceRoot":"/__parcel_source_root/"}