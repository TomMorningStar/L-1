{"mappings":"AAAA,2FAA2F;AAC3F,wEAAwE;AACxE,+DAA+D;AAE/D,MAAM,MAAM;IACV;QACE,MAAM;QACN,KAAK;IACP;IACA;QACE,MAAM;QACN,KAAK;IACP;IACA;QACE,MAAM;QACN,KAAK;IACP;IACA;QACE,MAAM;QACN,KAAK;IACP;CACD;AAGD,SAAS,YAAY,GAAG;IACtB,OAAO,IAAI,KAAK,CAAC,GAAG,IAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,cAAc,EAAE,QAAQ,oCAAoC;AAChH;AAEA,QAAQ,IAAI,YAAY,OAAO,+GAA+G","sources":["src/1-10/sortObjects_6/sortObjects_6.js"],"sourcesContent":["// Задача о сортировке объектов: у вас есть массив объектов вида { name: 'John', age: 25 }.\r\n//  Напишите код, который сортирует этот массив по возрастанию возраста,\r\n//   а при равных возрастах сортирует по алфавиту по полю name.\r\n\r\nconst arr = [\r\n  {\r\n    name: 'John',\r\n    age: 25\r\n  },\r\n  {\r\n    name: 'Ann',\r\n    age: 25\r\n  },\r\n  {\r\n    name: 'Bob',\r\n    age: 20\r\n  },\r\n  {\r\n    name: 'Jack',\r\n    age: 20\r\n  }\r\n];\r\n\r\n\r\nfunction sortObjects(arr) {\r\n  return arr.sort((a, b) => a.age - b.age || a.name.localeCompare(b.name)); // сортировка по возрасту и по имени\r\n}\r\n\r\nconsole.log(sortObjects(arr)); // [ { name: 'Bob', age: 20 }, { name: 'Jack', age: 20 }, { name: 'Ann', age: 25 }, { name: 'John', age: 25 } ]\r\n"],"names":[],"version":3,"file":"sortObjects.5eb40cbd.js.map","sourceRoot":"/__parcel_source_root/"}